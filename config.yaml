# Database Configuration
# 数据库连接字符串，支持 sqlite3、mysql、postgres
# sqlite3 格式：sqlite3://path/to/db.sqlite3
# mysql 格式：mysql://user:pass@host:port/dbname
# postgres 格式：postgres://user:pass@host:port/dbname
db_conn: sqlite3://database/vuln_v3.sqlite3

# Core Settings
# 检查周期，支持的格式：60s(秒)、10m(分钟)、1h(小时)，最低间隔1分钟
interval: "30m"

# 是否启用CVE过滤，开启后相同CVE的漏洞只推送一次
enable_cve_filter: true

# 是否禁用推送过滤，设为true则所有新发现的漏洞都会推送
no_filter: false

# 是否禁用服务启动时的提示信息
no_start_message: false

# 漏洞信息来源，使用数组格式
# avd: Alibaba漏洞库
# ti: 奇安信威胁情报中心
# oscs: OSCS开源安全情报预警
# threatbook: 微步在线威胁情报平台
# seebug: Seebug漏洞平台
# struts2: Apache Struts2漏洞信息
# venustech: 启明星辰漏洞平台
# chaitin: 长亭科技漏洞平台
# kev: CISA已知被利用漏洞目录
# xingtu: 安恒安全星图平台
sources: ["avd","ti","oscs","threatbook","seebug","struts2","venustech","chaitin","kev","xingtu"]

# Feature Flags
# 是否开启差异模式，开启后跳过初始化直接检查漏洞更新
diff_mode: false

# 是否跳过TLS证书验证
skip_tls_verify: false

# Network Settings
# 代理设置，支持 http://、https:// 和 socks5:// 格式
proxy: ""

# Content Filter Settings
# 白名单文件路径，用于指定需要推送的漏洞关键词
whitelist_file: ""

# 黑名单文件路径，用于指定不需要推送的漏洞关键词
blacklist_file: ""

# 白名单关键词列表，匹配这些关键词的漏洞会被推送
white_keywords: []

# 黑名单关键词列表，匹配这些关键词的漏洞会被过滤
black_keywords: []

# Push Notifications Configuration
pusher:
  # 钉钉机器人配置
  - type: dingding
    access_token: ""  # 钉钉机器人webhook的access_token部分
    sign_secret: ""   # 钉钉机器人的加签密钥（必须使用加签方式）

  # 飞书机器人配置
  - type: lark
    access_token: ""  # 飞书webhook URL中/open-apis/bot/v2/hook/后的部分，或完整URL
    sign_secret: ""   # 飞书机器人的加签密钥（必须使用加签方式）

  # 企业微信机器人配置
  - type: wechatwork
    key: ""          # 企业微信机器人webhook URL中的key部分

  # Server酱配置
  - type: serverchan
    key: ""          # Server酱的SCKEY

  # 自定义Webhook配置
  - type: webhook
    url: ""          # 完整的webhook URL

  # Bark推送服务配置
  - type: bark
    url: ""          # Bark服务完整URL，需包含DeviceKey

  # PushPlus配置
  - type: pushplus
    key: ""          # PushPlus的token

  # 蓝信机器人配置
  - type: lanxin
    domain: ""       # 蓝信webhook机器人域名
    hook_token: ""   # 蓝信webhook机器人的hook token
    sign_secret: ""  # 蓝信webhook机器人的签名密钥

  # Telegram机器人配置
  - type: telegram
    bot_token: ""    # Telegram Bot Token (格式: 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11)
    chat_ids: ""     # 接收消息的chat ID列表，多个用逗号分隔

# Debug Settings
# 是否启用调试模式，启用后会输出更详细的日志
debug: false

# Advanced Settings
# 是否禁用GitHub搜索，设为true则不会搜索GitHub上的相关仓库和PR
no_github_search: false